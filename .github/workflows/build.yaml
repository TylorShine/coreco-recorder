name: push
on:
  push:
    tags:
      - "v*"

jobs:
  windows-build:
    runs-on: windows-latest
    steps:
      - name: Checkout commit
        uses: actions/checkout@master

      - name: Set up Python 3.10
        uses: actions/setup-python@master
        with: { python-version: 3.10.11 }

      - name: Make venv
        run: python -m venv venv

      - name: Run Python commands
        run: |
          venv/Scripts/activate
          python -m pip install --upgrade pip
          pip install -r requirements/prod.txt
          pyinstaller --onefile --windowed -p "${{ github.workspace }}\venv\Lib\site-packages" --add-data "venv\Lib\site-packages\customtkinter;customtkinter" --collect-data=librosa src/coreco.py
  
      - name: upload
        uses: actions/upload-artifact@v1
        with:
          name: coreco-windows
          path: dist/coreco.exe

  macOS-build:
    runs-on: macOS-latest
    steps:
      - name: Checkout commit
        uses: actions/checkout@master

      - name: Set up Python 3.10
        uses: actions/setup-python@master
        with: { python-version: 3.10.11 }

      - name: Make venv
        run: python -m venv venv

      - name: Run Python commands
        run: |
          . venv/bin/activate
          python -m pip install --upgrade pip
          pip install -r requirements/prod.txt
          pyinstaller --onefile --windowed -p "${{ github.workspace }}/venv/lib/python3.10/site-packages" --add-data "venv/lib/python3.10/site-packages/customtkinter:customtkinter" --collect-data=librosa src/coreco.py

      - name: upload
        uses: actions/upload-artifact@v1
        with:
          name: coreco-macos
          path: dist/coreco

  ubuntu-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout commit
        uses: actions/checkout@master

      - name: Set up Python 3.10
        uses: actions/setup-python@master
        with: { python-version: 3.10.11 }

      - name: Upgrade pip
        run: python -m pip install --upgrade pip PyInstaller

      - name: Make venv
        run: python -m venv venv

      - name: Run Python commands
        run: |
          . venv/bin/activate
          python -m pip install --upgrade pip
          pip install -r requirements/prod.txt
          pyinstaller --onefile --windowed -p "${{ github.workspace }}/venv/lib/python3.10/site-packages" --add-data "venv/lib/python3.10/site-packages/customtkinter:customtkinter" --collect-data=librosa src/coreco.py

      - name: upload
        uses: actions/upload-artifact@v1
        with:
          name: coreco-linux
          path: dist/coreco

  release:
    needs: [ubuntu-build, macOS-build, windows-build]
    runs-on: ubuntu-latest

    steps:
      - name: Set Version
        id: set_version
        run: |
          VERSION=$(echo ${{ github.ref }} | sed -e "s#refs/tags/v##g")
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Download Linux
        uses: actions/download-artifact@v1
        with:
          name: coreco-linux

      - name: Download Mac
        uses: actions/download-artifact@v1
        with:
          name: coreco-macos

      - name: Download Windows
        uses: actions/download-artifact@v1
        with:
          name: coreco-windows

      - name: Zip
        run: |
          tar -C coreco-macos -pczvf coreco-${{ steps.set_version.outputs.version }}-macos.tar.gz coreco
          tar -C coreco-linux -pczvf coreco-${{ steps.set_version.outputs.version }}-linux.tar.gz coreco
          zip coreco-${{ steps.set_version.outputs.version }}-windows.zip --junk-paths coreco-windows ./coreco-windows/coreco.exe

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          name: CoReco v${{ steps.set_version.outputs.version }}
          files: |
            coreco-${{ steps.set_version.outputs.version }}-linux.tar.gz
            coreco-${{ steps.set_version.outputs.version }}-macos.tar.gz
            coreco-${{ steps.set_version.outputs.version }}-windows.zip